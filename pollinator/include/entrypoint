#!/usr/bin/env bash

TRY_LOOP="20"
set -e

# Defaults for Airflow Postgres DB
: "${POSTGRES_HOST:="POSTGRES_HOST"}"
: "${POSTGRES_PORT:="5432"}"
: "${POSTGRES_USER:="airflow"}"
: "${POSTGRES_PASSWORD:="airflow"}"
: "${POSTGRES_DB:="airflow"}"

# Defaults for RabbitMQ for Celery Executor 
: "${RABBITMQ_HOST:="rabbitmq"}"
: "${RABBITMQ_CREDS:="airflow:airflow"}"

# Default Celery Executor 
: "${AIRFLOW__CELERY__BROKER_URL:="ampq://${RABBITMQ_CREDS}@${RABBITMQ_HOST}:56721"}"

# Defaults and back-compat
: "${AIRFLOW__CORE__FERNET_KEY:=${FERNET_KEY:=$(python -c "from cryptography.fernet import Fernet; FERNET_KEY = Fernet.generate_key().decode(); print(FERNET_KEY)")}}"
: "${AIRFLOW__CORE__EXECUTOR:=${EXECUTOR:-Sequential}Executor}"

export \
  AIRFLOW__CELERY__BROKER_URL \
  AIRFLOW__CELERY__CELERY_RESULT_BACKEND \
  AIRFLOW__CORE__EXECUTOR \
  AIRFLOW__CORE__FERNET_KEY \
  AIRFLOW__CORE__LOAD_EXAMPLES \
  AIRFLOW__CORE__SQL_ALCHEMY_CONN \

# Airflow subcommand
CMD=$2

# Load DAGs exemples (default: Yes)
if [[ -z "$AIRFLOW__CORE__LOAD_EXAMPLES" && "${LOAD_EX:=n}" == n ]]
then
  AIRFLOW__CORE__LOAD_EXAMPLES=False
fi

# Install custom python package if requirements.txt is present
if [ -e "/requirements.txt" ]; then
    $(which pip) install --user -r /requirements.txt
fi


# Wait for postgres then init the db
if [[ -n $AIRFLOW__CORE__SQL_ALCHEMY_CONN  ]] && [[ $CMD =~ ^(webserver|scheduler|worker)$ ]]; then
  i=0
  # Wait for database port to open up
  HOST=$(echo "${AIRFLOW__CORE__SQL_ALCHEMY_CONN}" | awk -F: '{print $3}' | awk -F@ '{print $2}')
  PORT=$(echo "${AIRFLOW__CORE__SQL_ALCHEMY_CONN}" | awk -F: '{print $4}' | awk -F/ '{print $1}')
  echo "Waiting for host: ${HOST} ${PORT}"
  while ! nc -w 1 -z "${HOST}" "${PORT}"; do
    i=`expr $i + 1`
    if [ $i -ge $TRY_LOOP ]; then
      echo "$(date) - Postgres ${HOST}:${PORT} still not reachable, giving up"
      exit 1
    fi
    echo "$(date) - waiting for Postgres ${HOST}:${PORT}.... $i/$TRY_LOOP"
    sleep 0.001
  done
  
  if [ $CMD = "webserver" ]; then
    echo "Initializing airflow database..."
    nohup airflow initdb &>/dev/null  &
    airflow create_user -r Admin -u amanda -e amanda@brighthive.io -f amanda -l crawford -p testpassword
  fi
fi

# wait for rabbitmq
if [ "$1" = "webserver" ] || [ "$1" = "worker" ] || [ "$1" = "scheduler" ] || [ "$1" = "flower" ] ; then
  j=0
  while ! curl -sI -u $RABBITMQ_CREDS http://$RABBITMQ_HOST:15672/api/whoami |grep '200 OK'; do
    j=`expr $j + 1`
    if [ $j -ge $TRY_LOOP ]; then
      echo "$(date) - $RABBITMQ_HOST still not reachable, giving up"
      exit 1
    fi
    echo "$(date) - waiting for RabbitMQ... $j/$TRY_LOOP"
    sleep 5
  done
fi

# Run the original command
exec "$@"